version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.12

#############################################################
# Define workflows
#############################################################
workflows:
  version: 2
  pipeline:
    jobs:
      - lint
      - unit_tests
      - build:
          requires:
            - lint
            - unit_tests
      - deploy:
          requires:
            - build
          #filters:
          #  branches:
          #    only:
          #      - master

#############################################################
# Define jobs
#############################################################
jobs:
  e2e_tests:
    working_directory: ~/app
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Update Chrome
          command: |
            sudo apt-get update
            sudo apt-get install google-chrome-stable
      - run: npm run e2e

  lint:
    working_directory: ~/app
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run lint

  unit_tests:
    working_directory: ~/app
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run code-coverage

  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run build -- --prod

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - aws-s3/sync:
          from: dist/feed-me-web
          to: 's3://feed-me.io'
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          overwrite: true